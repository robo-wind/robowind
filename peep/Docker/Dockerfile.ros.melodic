#
# this dockerfile roughly follows the 'Ubuntu install of ROS Melodic' from:
#   http://wiki.ros.org/melodic/Installation/Ubuntu
#
#ARG BASE_IMAGE=nvcr.io/nvidia/l4t-base:r32.4.3
ARG BASE_IMAGE=nvcr.io/nvidia/l4t-tensorflow:r32.4.4-tf2.3-py3
FROM ${BASE_IMAGE}

ARG ROS_PKG=desktop
ENV ROS_DISTRO=melodic
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}

ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /workspace

# add the ROS deb repo to the apt sources list
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        git \
		cmake \
		build-essential \
		curl \
		wget \ 
		gnupg2 \
		lsb-release \
    && rm -rf /var/lib/apt/lists/*
    
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# install ROS packages and required libraries
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    ros-${ROS_DISTRO}-${ROS_PKG} \
    ros-${ROS_DISTRO}-image-transport \
    ros-${ROS_DISTRO}-vision-msgs \
    ros-${ROS_DISTRO}-ackermann-msgs \
    ros-${ROS_DISTRO}-joy \
    ros-${ROS_DISTRO}-cv-bridge \
    ros-${ROS_DISTRO}-tf \
    ros-${ROS_DISTRO}-navigation \
    ros-${ROS_DISTRO}-teb-local-planner \
    ros-${ROS_DISTRO}-slam-toolbox \
    python-rosdep \
    python-rosinstall \
    python-rosinstall-generator \
    python-wstool \
    python-scipy \
    python-serial \
    joystick \
    libeigen3-dev \
    libyaml-cpp-dev \
    && rm -rf /var/lib/apt/lists/*
  
# init/update rosdep
RUN apt-get update && \
    cd ${ROS_ROOT} && \
    rosdep init && \
    rosdep update && \
    rm -rf /var/lib/apt/lists/*

## install librealsense
# Register the server's public key:
RUN apt-key adv --keyserver keys.gnupg.net --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key 
RUN echo "deb http://realsense-hw-public.s3.amazonaws.com/Debian/apt-repo bionic main" > /etc/apt/sources.list.d/realsense.list

RUN apt-get update && apt-get install -y \
    librealsense2-utils \
    librealsense2-dev \
    && rm -rf /var/lib/apt/lists/*


# setup entrypoint
COPY ./packages/ros_entrypoint.sh /ros_entrypoint.sh
#RUN echo 'source ${ROS_ROOT}/setup.bash' >> /root/.bashrc 
RUN apt-get update && \
    apt-get install -y  python-catkin-tools \
    python-rosdep python-rosinstall \ 
    python-rosinstall-generator \ 
    python-wstool build-essential

RUN echo 'source /opt/ros/melodic/setup.bash' >> /root/.bashrc
RUN mkdir -p /root/ros_cam_highres
ADD  ./ros_cam_highres/ /root/ros_cam_highres
#RUN apt-get install -y ros-melodic-usb-cam
RUN rosdep install -y --from-paths /root/ros_cam_highres/src --ignore-src
RUN . "/opt/ros/melodic/setup.sh"  && cd /root/ros_cam_highres && catkin init && catkin build
#RUN /bin/bash -c "cd  /root/ros_cam_highres && catkin build && source /root/ros_cam_highres/devel/setup.sh"
#RUN . "/opt/ros/melodic/setup.sh"  && cd /root/ros_cam_highres && catkin init && catkin build
#RUN /bin/bash -c "cd  /root/ros_cam_highres && catkin_make && source /root/ros_cam_highres/devel/setup.sh" 

RUN apt-get install -y -qqy x11-apps \
    gedit \
    vim       

WORKDIR /root/ros_cam_highres

ENV LD_LIBRARY_PATH = $LD_LIBRARY_PATH:/usr/local/cuda/lib64

COPY ./ros_entrypoint.sh /
ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]
#ENTRYPOINT ["/ros_entrypoint.sh"]
#CMD ["bash"]
#CMD ["/bin/bash"]

#WORKDIR /
